syntax = "proto3";

option go_package = "/pb";

package pb;

// The Spawner service definition 
service SpawnerService {
    // Spawn required cluster
    rpc CreateCluster (ClusterRequest) returns (ClusterResponse) {}

    //Create add token to secret manager
    rpc AddToken (AddTokenRequest) returns (AddTokenResponse) {}

    //Create get token to secret manager
    rpc GetToken (GetTokenRequest) returns (GetTokenResponse) {}   
    
    // Get Cluster
    rpc GetCluster (GetClusterRequest) returns (ClusterSpec) {}

    // Get Clusters
    rpc GetClusters (GetClustersRequest) returns (GetClustersResponse) {}

    // Spawn required instance
    rpc AddNode (NodeSpawnRequest) returns (NodeSpawnResponse) {}

    // Status of cluster
    rpc ClusterStatus (ClusterStatusRequest) returns (ClusterStatusResponse) {}

    // Delete Cluster
    rpc DeleteCluster (ClusterDeleteRequest) returns (ClusterDeleteResponse) {}

    // Delete Node
    rpc DeleteNode (NodeDeleteRequest) returns (NodeDeleteResponse) {}

    //Create Volume
    rpc CreateVolume(CreateVolumeRequest) returns (CreateVolumeResponse) {}

    //Delete Vol
    rpc DeleteVolume(DeleteVolumeRequest) returns (DeleteVolumeResponse) {}

    rpc CreateSnapshot( CreateSnapshotRequest) returns (CreateSnapshotResponse) {}

    rpc CreateSnapshotAndDelete(CreateSnapshotAndDeleteRequest) returns (CreateSnapshotAndDeleteResponse) {}
}

message NodeSpec {
    string name = 1;
    string instance = 2;
    int32 diskSize = 3;
    string hostName = 4;
    string state = 5;
    string uuid = 6;
    string ipAddr = 7;
    string availabilityzone = 8;
    string clusterId = 9;
    map<string, string> labels = 10;
}

message ClusterRequest {
    string provider = 1;
    string region = 2;
    NodeSpec node = 3;
    map<string, string> labels = 4;
}

message GetClusterRequest {
    string clusterName = 1;
}

message GetClustersRequest {
    string provider = 1;
    string region = 2;
    string scope = 3;
}

message ClusterSpec {
    string name = 1;
    string clusterId = 2;
    repeated NodeSpec nodeSpec = 3;
}

message GetClustersResponse {
    repeated ClusterSpec clusters = 1;
}

message ClusterResponse {
    string clusterName = 1;
    string nodeGroupName = 2;
    string error = 3;
}

message ClusterStatusRequest {
    string clusterName = 1;
}

message ClusterStatusResponse {
    string status = 1;
    string error = 2;
}

message AddTokenRequest{
    string clusterName = 1;
    string region = 2;
}

message AddTokenResponse{
    string status = 1;
    string error =2;
}

message GetTokenRequest{
    string clusterName = 1;
    string region = 2;
}

message GetTokenResponse{
    string token =1;
    string status = 2;
    string error = 3;
}

message NodeSpawnRequest {
    string clusterName = 1;
    NodeSpec nodeSpec = 2;
}

message NodeSpawnResponse {
    string error = 2;
}

message ClusterDeleteRequest {
    string clusterName = 1;
}

message ClusterDeleteResponse {
    string error = 1;
}

message NodeDeleteRequest {
    string clusterName = 1;
    string nodeGroupName = 2;
}

message NodeDeleteResponse {
    string error = 1;
}

message CreateVolumeRequest{
    string availabilityzone = 1;
    string volumetype =2;
    int64 size=3;
    string snapshotid=4; 
    string provider=5;
    string region=6;
}

message CreateVolumeResponse{
    string volumeid=1;
    string error=2;
}

message DeleteVolumeRequest{
    string volumeid=1;
    string provider=2;
    string region=3;
}

message DeleteVolumeResponse{
    bool deleted=1;
    string error=2;
}

message CreateSnapshotRequest{
    string volumeid=1;
    string provider=2;
    string region=3;
}

message CreateSnapshotResponse{
    string snapshotid=1;
    string error=2;
}

message CreateSnapshotAndDeleteRequest{
    string volumeid=1;
    string provider=2;
    string region=3;
}

message CreateSnapshotAndDeleteResponse{
    string snapshotid=1;
    bool deleted=2;
    string error=3;
}